<application>
  <component name="AppStorage">
    <histories>
      <item value="Test if the supplied orientation is in landscape." />
      <item value="* &lt;p&gt;The available stream configurations that this * camera device supports; also includes the minimum frame durations * and the stall durations for each format/size combination.&lt;/p&gt; * &lt;p&gt;All camera devices will support sensor maximum resolution (defined by * {@link CameraCharacteristics#SENSOR_INFO_ACTIVE_ARRAY_SIZE android.sensor.info.activeArraySize}) for the JPEG format.&lt;/p&gt; * &lt;p&gt;For a given use case, the actual maximum supported resolution * may be lower than what is listed here, depending on the destination * Surface for the image data. For example, for recording video, * the video encoder chosen may have a maximum size limit (e.g. 1080p) * smaller than what the camera (e.g. maximum resolution is 3264x2448) * can provide.&lt;/p&gt; * &lt;p&gt;Please reference the documentation for the image data destination to * check if it limits the maximum size for image data.&lt;/p&gt; * &lt;p&gt;The following table describes the minimum required output stream * configurations based on the hardware level" />
      <item value="* Set the flash unit's torch mode of the camera of the given ID without opening the camera * device." />
      <item value="landscape" />
      <item value="is Landscape" />
      <item value="an image format from {@link ImageFormat} or {@link PixelFormat}" />
      <item value="this is ignored, this value is set automatically when needed. */" />
      <item value="this value is set automatically when needed." />
      <item value="Permission denial: writing to settings requires android.permission.WRITE_SETTINGS" />
      <item value="writing to settings requires android.permission.WRITE_SETTINGS" />
      <item value="/** * A camera instance can be used to compute 3D transformations and * generate a matrix that can be applied, for instance, on a * {@link Canvas}. */" />
      <item value="/** * Whether the method can be called from JS synchronously **on the JS thread**, possibly returning * a result. * * &lt;p&gt;WARNING: in the vast majority of cases, you should leave this to false which allows your * native module methods to be called asynchronously: calling methods synchronously can have * strong performance penalties and introduce threading-related bugs to your native modules. * * &lt;p&gt;In order to support remote debugging, both the method args and return type must be * serializable to JSON: this means that we only support the same args as {@link ReactMethod}, and * the hook can only be void or return JSON values (e.g. bool, number, String, {@link * WritableMap}, or {@link WritableArray}). Calling these methods when running under the websocket * executor is currently not supported. */" />
      <item value="发送短信" />
      <item value="This field should be initialized via a function call to // prevent its value being inlined in the app during compilation because // we will later set it to the value based on the app's target SDK" />
      <item value="The name of the second instruction set (CPU type + ABI convention) of native code." />
      <item value="/** * Gets the hardware serial number, if available. * * &lt;p class=&quot;note&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; Root access may allow you to modify device identifiers, such as * the hardware serial number. If you change these identifiers, you can use * &lt;a href=&quot;/training/articles/security-key-attestation.html&quot;&gt;key attestation&lt;/a&gt; to obtain * proof of the device's original identifiers. * * @return The serial number if specified. */" />
      <item value="Settings.Secure.getString(this.getContentResolver(), Settings.Secure.ANDROID_ID);" />
      <item value="统一回调" />
      <item value="// Object added to the page via AddJavascriptInterface() that is used by the test Javascript to // notify back to Java if the Service Worker registration was successful." />
      <item value="/** * Systrace stub that mostly does nothing but delegates to Trace for beginning/ending sections. The * internal version of this file has not been opensourced yet. */" />
      <item value="is Blocking Synchronous Method" />
      <item value="/** * Level for {@link #onTrimMemory(int)}: the process has gone on to the * LRU list. This is a good opportunity to clean up resources that can * efficiently and quickly be re-built if the user returns to the app. */" />
      <item value="/** * Binder IPC calls go through the public entry point. * This can be called with or without the global lock held. */" />
      <item value="/** * Have the system immediately kill all background processes associated * with the given package. This is the same as the kernel killing those * processes to reclaim memory; the system will take care of restarting * these processes in the future as needed. * * @param packageName The name of the package whose processes are to * be killed. */" />
      <item value="* Constant for {@link #importance}: This process is running something * that is actively visible to the user, though not in the immediate * foreground. This may be running a window that is behind the current * foreground (so paused and with its state saved, not interacting with * the user, but visible to them to some degree); it may also be running * other services under the system's control that it inconsiders important." />
      <item value="* Constant for {@link #importance}: This process is not something the user * is directly aware of, but is otherwise perceptible to them to some degree." />
      <item value="* Constant for {@link #importance}: {@link #IMPORTANCE_PERCEPTIBLE} had this wrong value * before {@link Build.VERSION_CODES#O}. Since the {@link Build.VERSION_CODES#O} SDK, * the value of {@link #IMPORTANCE_PERCEPTIBLE} has been fixed. * * &lt;p&gt;The system will return this value instead of {@link #IMPORTANCE_PERCEPTIBLE} * on Android versions below {@link Build.VERSION_CODES#O}. * * &lt;p&gt;On Android version {@link Build.VERSION_CODES#O} and later, this value will still be * returned for apps with the target API level below {@link Build.VERSION_CODES#O}. * For apps targeting version {@link Build.VERSION_CODES#O} and later, * the correct value {@link #IMPORTANCE_PERCEPTIBLE} will be returned." />
      <item value="* @deprecated Pre-{@link android.os.Build.VERSION_CODES#P} version of * {@link #IMPORTANCE_TOP_SLEEPING}. As of Android * {@link android.os.Build.VERSION_CODES#P}, this is considered much less * important since we want to reduce what apps can do when the screen is off." />
      <item value="* Constant for {@link #importance}: This process is contains services * that should remain running. These are background services apps have * started, not something the user is aware of, so they may be killed by * the system relatively freely (though it is generally desired that they * stay running as long as they want to)." />
      <item value="/** * @deprecated Pre-{@link android.os.Build.VERSION_CODES#P} version of * {@link #IMPORTANCE_TOP_SLEEPING}. As of Android * {@link android.os.Build.VERSION_CODES#P}, this is considered much less * important since we want to reduce what apps can do when the screen is off." />
      <item value="* Constant for {@link #importance}: This process is running a foreground * service, for example to perform music playback even while the user is * not immediately in the app. This generally indicates that the process * is doing something the user actively cares about." />
      <item value="* Constant for {@link #importance}: This process is running the * foreground UI; that is, it is the thing currently at the top of the screen * that the user is interacting with." />
      <item value="* The relative importance level that the system places on this process. * These constants are numbered so that &quot;more important&quot; values are * always smaller than &quot;less important&quot; values." />
      <item value="The relative importance level that the system places on this process. * These constants are numbered so that &quot;more important&quot; values are * always smaller than &quot;less important&quot; values. */" />
      <item value="Have the system immediately kill all background processes associated * with the given package. This is the same as the kernel killing those * processes to reclaim memory; the system will take care of restarting * these processes in the future as needed. * * @param packageName The name of the package whose processes are to * be killed." />
      <item value="* Level for {@link #onTrimMemory(int)}: the process is nearing the end * of the background LRU list, and if more memory isn't found soon it will * be killed." />
      <item value="* Level for {@link #onTrimMemory(int)}: the process has gone on to the * LRU list. This is a good opportunity to clean up resources that can * efficiently and quickly be re-built if the user returns to the app." />
      <item value="Level for {@link #onTrimMemory(int)}: the process is nearing the end * of the background LRU list, and if more memory isn't found soon it will * be killed." />
      <item value="Level for {@link #onTrimMemory(int)}: the process is around the middle * of the background LRU list; freeing memory can help the system keep * other processes running later in the list for better overall performance." />
      <item value="The following required arguments were not provided" />
      <item value="compose array with one item - current build flavor name" />
      <item value="extract Current Variants" />
      <item value="Found argument 'react-native' which wasn't expected, or isn't valid in this context" />
      <item value="Found argument 'C:\apollo-mobile-rn\android\app\build/generated/assets/react/release/diff.android.bundle' which wasn't expected, or isn't valid in this context" />
      <item value="事件" />
      <item value="成功" />
      <item value="尝试重新读取" />
      <item value="Set up the call to the compose-source-maps script" />
      <item value="Called when the react context is initialized (all modules registered). Always called on the * UI thread." />
      <item value="Add a listener to be notified of react instance events" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="354" />
        <entry key="ENGLISH" value="355" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="NORWEGIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>