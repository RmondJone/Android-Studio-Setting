<application>
  <component name="AppStorage">
    <histories>
      <item value="Don't show the dialog if the host is paused" />
      <item value="* Call this from {@link Activity#onPause()}. This notifies any listening modules so they can do * any necessary cleanup. The passed Activity is the current Activity being paused. This will * always be the foreground activity that would be returned by {@link * ReactContext#getCurrentActivity()}." />
      <item value="Unmount the react application at this root view, reclaiming any JS memory associated with that * application. If {@link #startReactApplication} is called, this method must be called before the * ReactRootView is garbage collected (typically in your Activity's onDestroy, or in your * Fragment's onDestroyView)." />
      <item value="current" />
      <item value="现在" />
      <item value="Sends an event to the JS instance that the hardware back has been pressed" />
      <item value="/** * By default, all onBackPress() calls should not execute the default backpress handler and should * instead propagate it to the JS instance. If JS doesn't want to handle the back press itself, it * shall call back into native to invoke this function which should execute the default handler */" />
      <item value="This method will give JS the opportunity to consume the back button event. If JS does not * consume the event, mDefaultBackButtonImpl will be invoked at the end of the round trip to JS." />
      <item value="Invoke without round trip to JS." />
      <item value="Fast Forward media key" />
      <item value="his method will give JS the opportunity to consume the back button event. If JS does not * consume the event, mDefaultBackButtonImpl will be invoked at the end of the round trip to JS." />
      <item value="Force Bundle task to produce sourcemap files if they are not pre-configured by user yet" />
      <item value="compose array with one item - current build flavor name" />
      <item value="if its intermediates/sourcemaps/react then it should be generated/sourcemaps/react" />
      <item value="load Synchronously" />
      <item value="* Returns the name of the main module. Determines the URL used to fetch the JS bundle from the * packager server. It is only used when dev support is enabled. This is the first file to be * executed once the {@link ReactInstanceManager} is created. e.g. &quot;index.android&quot;" />
      <item value="visualized" />
      <item value="A class allows recognizing double key tap of &quot;R&quot;, used to reload JS in {@link * AbstractReactActivity}, {@link RedBoxDialog} and {@link ReactActivity}." />
      <item value="Cannot loadApp while app is already running." />
      <item value="Error while updating property 'display' in shadow node of type: RCTView" />
      <item value="Error while updating prop display" />
      <item value="Expected to run on UI thread!" />
      <item value="容器" />
      <item value="小程序" />
      <item value="INSTALL PARSE FAILED MANIFEST MALFORMED" />
      <item value="requires a placeholder substitution but no value for &lt;GETUI_APP_KEY&gt; is provided" />
      <item value="INDICATOR" />
      <item value="You are not allowed to push code to protected branches on this project" />
      <item value="LAYER TYPE" />
      <item value="Identifier 'Text' has already been declared" />
      <item value="申请" />
      <item value="Returns whether notifications from the calling package are not blocked." />
      <item value="Some privileges permanently disabled, may need to set up in the execute." />
      <item value="注册" />
      <item value="INSTALL FAILED USER RESTRICTED" />
      <item value="上次" />
      <item value="auto Play" />
      <item value="animation style to use when the popup appears * and disappears. Set to -1 for the default animation, 0 for no * animation, or a resource identifier for an explicit animation." />
      <item value="token null is not valid; is your activity running?" />
      <item value="Internal server error, please try again later." />
      <item value="physical pixels" />
      <item value="* Set the text size to &lt;code&gt;size&lt;/code&gt; physical pixels, or to &lt;code&gt;size&lt;/code&gt; * device-independent pixels if &lt;code&gt;dip&lt;/code&gt; is true." />
      <item value="* Flags for {@link #fromHtml(String, int, ImageGetter, TagHandler)}: Separate block-level * elements with blank lines (two newline characters) in between. This is the legacy behavior * prior to N." />
      <item value="Flags for {@link #fromHtml(String, int, ImageGetter, TagHandler)}: Separate block-level * elements with blank lines (two newline characters) in between. This is the legacy behavior * prior to N." />
      <item value="Parameter specified as non-null is null" />
      <item value="初始" />
      <item value="duplicated with element declared" />
      <item value="入口" />
      <item value="conduct" />
      <item value="进行" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="262" />
        <entry key="ENGLISH" value="263" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="NORWEGIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>