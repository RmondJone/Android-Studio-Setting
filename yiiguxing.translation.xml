<application>
  <component name="AppStorage">
    <histories>
      <item value="Sets the tasks which build the files of this collection." />
      <item value="Registers some tasks which build the files of this collection." />
      <item value="Expose a minimal interface on the application variant and the task itself:" />
      <item value="Set request rationale" />
      <item value="Some privileges permanently disabled, may need to set up in the execute." />
      <item value="Handle overlay permission." />
      <item value="permissions are denied." />
      <item value="permissions are granted." />
      <item value="We use reflection here to pick up the class that initializes Flipper, since Flipper library is not available in release mode" />
      <item value="This should be set on project.ext.react and mirrored here. If it is not set * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode * and the benefits of using Hermes will therefore be sharply reduced." />
      <item value="the transform cache was reset." />
      <item value="The following packages use deprecated &quot;rnpm&quot; config that will stop working from next release" />
      <item value="react-native-reanimated could not be found within the project" />
      <item value="the transform cache was reset" />
      <item value="Compilation is not supported for following modules: react-native-screens. Unfortunately you can't have non-Gradle Java modules and Android-Gradle modules in one project." />
      <item value="Unsupported Modules Detected" />
      <item value="already disposed" />
      <item value="Already disposed" />
      <item value="Error: Option 'mapper' isn't supported by the Node crawler" />
      <item value="Option 'mapper' isn't supported by the Node crawler" />
      <item value="The following packages use deprecated &quot;rnpm&quot; config that will stop working from next release:" />
      <item value="Please notify their maintainers about it. You can find more details at https://github.com/react-native-community/cli/blob/master/docs/configuration.md#migration-guide." />
      <item value="True if this View is in edit mode, false otherwise." />
      <item value="* Returns the name of the bundle in assets. If this is null, and no file path is specified for * the bundle, the app will only work with {@code getUseDeveloperSupport} enabled and will * always try to load the JS bundle from the packager server. * e.g. &quot;index.android.bundle&quot;" />
      <item value="Returns a custom path of the bundle file. This is used in cases the bundle should be loaded * from a custom path. By default it is loaded from Android assets, from a path specified * by {@link getBundleAssetName}." />
      <item value="nuance Voice" />
      <item value="If true, also generate a universal APK" />
      <item value="代扣" />
      <item value="Please recharge" />
      <item value="Unsupported Modules Detected: Compilation is not supported for following modules: react-native-gesture-handler. Unfortunately you can't have non-Gradle Java modules and Android-Gradle modules in one project." />
      <item value="Already disposed: Module: 'android-react-native-gesture-handler'" />
      <item value="Failed to resolve: com.github.RmondJone:SpringDiaLog:1.0.6" />
      <item value="As of {@link android.os.Build.VERSION_CODES#LOLLIPOP}, this method * is no longer available to third party * applications: the introduction of document-centric recents means * it can leak person information to the caller. For backwards compatibility, * it will still return a small subset of its data: at least the caller's * own tasks, and possibly some other tasks * such as home that are known to not be sensitive." />
      <item value="context is not instanceof Activity or Service, disable WXStat" />
      <item value="Check to see whether this activity is in the process of finishing, * either because you called {@link #finish} on it or someone else * has requested that it finished. This is often used in * {@link #onPause} to determine whether the activity is simply pausing or * completely finishing." />
      <item value="/** * Lifecycle state for an Activity. The state right after pause and right before resume are the * basically the same so this enum is in terms of the forward lifecycle progression (onResume, etc). * Eventually, if necessary, it could contain something like: * * BEFORE_CREATE, * CREATED, * VIEW_CREATED, * STARTED, * RESUMED */" />
      <item value="&lt;p&gt;Adds a closure to be called immediately after this project has been evaluated. The project is passed to the * closure as a parameter. Such a listener gets notified when the build file belonging to this project has been * executed. A parent project may for example add such a listener to its child project. Such a listener can further * configure those child projects based on the state of the child projects after their build files have been * run.&lt;/p&gt; * * @param closure The closure to call." />
      <item value="/** * Flag for {@link #setSystemUiVisibility(int)}: When using other layout * flags, we would like a stable view of the content insets given to * {@link #fitSystemWindows(Rect)}. This means that the insets seen there * will always represent the worst case that the application can expect * as a continuous state. In the stock Android UI this is the space for * the system bar, nav bar, and status bar, but not more transient elements * such as an input method. * * The stable layout your UI sees is based on the system UI modes you can * switch to. That is, if you specify {@link #SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN} * then you will get a stable layout for changes of the * {@link #SYSTEM_UI_FLAG_FULLSCREEN} mode; if you specify * {@link #SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN} and * {@link #SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION}, then you can transition * to {@link #SYSTEM_UI_FLAG_FULLSCREEN} and {@link #SYSTEM_UI_FLAG_HIDE_NAVIGATION} * with a stable layout. (Note that you should avoid using * {@link #SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION} by itself.) * * If you have set the window flag {@link WindowManager.LayoutParams#FLAG_FULLSCREEN} * to hide the status bar (instead of using {@link #SYSTEM_UI_FLAG_FULLSCREEN}), * then a hidden status bar will be considered a &quot;stable&quot; state for purposes * here. This allows your UI to continually hide the status bar, while still * using the system UI flags to hide the action bar while still retaining * a stable layout. Note that changing the window fullscreen flag will never * provide a stable layout for a clean transition. * * &lt;p&gt;If you are using ActionBar in * overlay mode with {@link Window#FEATURE_ACTION_BAR_OVERLAY * Window.FEATURE_ACTION_BAR_OVERLAY}, this flag will also impact the * insets it adds to those given to the application. */" />
      <item value="Flags that can impact the layout in relation to system UI." />
      <item value="These are the system UI flags that can be cleared by events outside * of an application. Currently this is just the ability to tap on the * screen while hiding the navigation bar to have it return." />
      <item value="Process 'command 'cmd'' finished with non-zero exit value 1" />
      <item value="The SourceSet 'instrumentTest' is not recognized by the Android Gradle Plugin. Perhaps you misspelled something?" />
      <item value="Provides additional operating flags. Currently may be * 0 or have the {@link #SHOW_IMPLICIT} bit set." />
      <item value="The resource identifier of the style to apply." />
      <item value="* Sets the working directory for the process. The supplied argument is evaluated as per {@link * org.gradle.api.Project#file(Object)}. *" />
      <item value="The tasks. These are evaluated as per {@link org.gradle.api.Task#dependsOn(Object...)}." />
      <item value="registerGeneratedResFolders for Android plugin 3.x" />
      <item value="Create dirs if they are not there (e.g. the &quot;clean&quot; task just ran)" />
      <item value="Workaround for Android Gradle Plugin 3.2+ new asset directory" />
      <item value="Deprecated Gradle features were used in this build, making it incompatible with Gradle 5.0.&#10;Use '--warning-mode all' to show the individual deprecation warnings." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="67" />
        <entry key="ENGLISH" value="68" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="DUTCH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>