<application>
  <component name="AppStorage">
    <histories>
      <item value="* Create a drawable for the given image. * It is guaranteed that this method is only called if * {@link #supportsImageType(CloseableImage)} returned tru" />
      <item value="Returns true if the factory can create a Drawable for the given image." />
      <item value="Set whether a debug overlay that displays image information, like dimensions and size * should be drawn on top of a Drawee view." />
      <item value="Could not find generated setter for class com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager" />
      <item value="Fresco has already been initialized! `Fresco.initialize(...)` should only be called 1 single time to avoid memory leaks!" />
      <item value="if the Bitmap cannot be allocated" />
      <item value="max Memory" />
      <item value="Gets the image pipeline instance" />
      <item value="Channel is unrecoverably broken and will be disposed!" />
      <item value="Couldn't read row 0, col -1 from CursorWindow. Make sure the Cursor is initialized correctly before accessing data from it." />
      <item value="ools:replace specified at line:31 for attribute android:allowBackup, but no new value specified" />
      <item value="Validation failed, exiting" />
      <item value="Unexpected trailing comma after rest element" />
      <item value="Could not resolve project :react-native-webview." />
      <item value="true" />
      <item value="null pointer dereference" />
      <item value="isabling all transitive dependencies of this dependency" />
      <item value="disabling all transitive dependencies of this dependency" />
      <item value="in case of versions conflict '3.1' version of hibernate wins" />
      <item value="/by artifact name" />
      <item value="Failed to authenticate with proxy" />
      <item value="deserted" />
      <item value="废弃的" />
      <item value="废弃" />
      <item value="Top-level build file where you can add configuration options common to all sub-projects/modules" />
      <item value="All of React Native (JS, Obj-C sources, Android binaries) is installed from npm" />
      <item value="Unable to resolve module" />
      <item value="Returns a list of RunningTaskInfo records describing each of * the running tasks." />
      <item value="* * @param intent The desired intent as per resolveActivity(). * @param flags Additional option flags to modify the data returned. The * most important is {@link #MATCH_DEFAULT_ONLY}, to limit the * resolution to only those activities that support the * {@link android.content.Intent#CATEGORY_DEFAULT}. Or, set * {@link #MATCH_ALL} to prevent any filtering of the results. * @return Returns a List of ResolveInfo objects containing one entry for * each matching activity, ordered from best to worst. In other * words, the first item is what would be returned by * {@link #resolveActivity}. If there are no matching activities, an * empty list is returned." />
      <item value="Retrieve all activities that can be performed for the given intent" />
      <item value="This experimental syntax requires enabling the parser plugin" />
      <item value="SyntaxError: C:\apollo-mobile-rn\app\entry\router.js: Unexpected token (57:18)" />
      <item value="m JS Bundle Temp File" />
      <item value="bundle URL" />
      <item value="whether we should request minified JS bundles." />
      <item value="// We store JS bundle loaded from dev server in a single destination in app's data dir. // In case when someone schedule 2 subsequent reloads it may happen that JS thread will // start reading first reload output while the second reload starts writing to the same // file. As this should only be the case in dev mode we leave it as it is. // TODO(6418010): Fix readers-writers problem in debug reload from HTTP server" />
      <item value="We store JS bundle loaded from dev server in a single destination in app's data dir. // In case when someone schedule 2 subsequent reloads it may happen that JS thread will // start reading first reload output while the second reload starts writing to the same // file. As this should only be the case in dev mode we leave it as it is. // TODO(6418010): Fix readers-writers problem in debug reload from HTTP server" />
      <item value="should use downloaded * JS bundle file instead of using JS file from assets. This may happen when app has not been * updated since the last time we fetched the bundle." />
      <item value="It was renamed in D15958697 so it doesn't get stuck with no way to turn it off:" />
      <item value="This option is no longer exposed in the dev menu UI." />
      <item value="It was renamed in D15958697 so it doesn't get stuck with no way to turn it off" />
      <item value="Whether Start Sampling Profiler on App Start is enabled." />
      <item value="Whether Nuclide JS debugging is enabled." />
      <item value="Whether JS bundle should be minified." />
      <item value="Whether dev mode should be enabled in JS bundles" />
      <item value="Whether debug information about transitions should be displayed" />
      <item value="whether an overlay showing current FPS should be shown" />
      <item value="exopackage" />
      <item value="Enable the exopackage SoSource." />
      <item value="Loads Flipper in React Native templates." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="126" />
        <entry key="ENGLISH" value="127" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="DUTCH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>