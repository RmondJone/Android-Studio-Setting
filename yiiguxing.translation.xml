<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="588" />
    <option name="newTranslationDialogX" value="4085" />
    <option name="newTranslationDialogY" value="316" />
    <histories>
      <item value="转账" />
      <item value="Not using buildInfo properties file for this build." />
      <item value="[Fatal Error] vivo-push-2.9.0.pom:2:10: 已经看到 doctype" />
      <item value="A RenderFlex overflowed by 9.1 pixels on the bottom." />
      <item value="Declare repository providing the artifact" />
      <item value="Failed assertion: boolean expression must not be null" />
      <item value="Vertical viewport was given unbounded height" />
      <item value="PopupTransAnimationStatee4777(ticker active) was disposed with an active Ticker." />
      <item value="基点&#10;" />
      <item value="build Transitions" />
      <item value="barrier" />
      <item value="opaque" />
      <item value="Unimplemented handling of missing static target" />
      <item value="The default value of an optional parameter must be constant." />
      <item value="date Bean." />
      <item value="exceed" />
      <item value="This version of Android Studio cannot open this project, please retry with Android Studio 3.6 or newer" />
      <item value="* @param invalidateCache Whether the drawing cache for this view should be * invalidated as well. This is usually true for a full * invalidate, but may be set to false if the View's contents or * dimensions have not changed." />
      <item value="Pausing an activity that is not the current activity, this is incorrect!" />
      <item value="# The following adds the Cupertino Icons font to your application. # Use with the CupertinoIcons class for iOS style icons." />
      <item value="No virtual method" />
      <item value="Could not invoke UMengBridge.initUmeng" />
      <item value="Executes the given command at some time in the future. The command * may execute in a new thread, in a pooled thread, or in the calling * thread, at the discretion of the {@code Executor} implementation." />
      <item value="/** * Called when the message queue has run out of messages and will now * wait for more. Return true to keep your idle handler active, false * to have it removed. This may be called if there are still messages * pending in the queue, but they are all scheduled to be dispatched * after the current time. */" />
      <item value="Only one Looper may be created per thread" />
      <item value="Be lenient about moving outside of buttons" />
      <item value="// Must notify autofill manager before performing the click actions to avoid scenarios where // the app has a click listener that changes the state of views the autofill service might // be interested on." />
      <item value="Must only be called on the looper thread or the finalizer." />
      <item value="Swaps the two specified elements in the specified array" />
      <item value="Specifies whether parameter names and values are already URL encoded" />
      <item value="Specifies whether parameter names and values are already URL encoded." />
      <item value="Offer this request to the cache" />
      <item value="If we have a cache response too, then we're doing a conditional get." />
      <item value="If we're crashing on I/O or otherwise, don't leak the cache body." />
      <item value="If we're forbidden from using the network and the cache is insufficient, fail" />
      <item value="If we don't need the network, we're done." />
      <item value="/** * Attempts to exhaust {@code source}, returning true if successful. This is useful when reading a * complete source is helpful, such as when doing so completes a cache body or frees a socket * connection for reuse. */" />
      <item value="Ready async calls in the order they'll be ru" />
      <item value="* Set a callback to be invoked each time the dispatcher becomes idle (when the number of running * calls returns to zero)." />
      <item value="Used by {@code Call#execute} to signal it is in-flight." />
      <item value="Returns the number of running calls that share a host with" />
      <item value="Encodes HTTP requests and decodes HTTP responses" />
      <item value="/** * Returns a modifiable list of interceptors that observe a single network request and response. * These interceptors must call {@link Interceptor.Chain#proceed} exactly once: it is an error * for a network interceptor to short-circuit or repeat a network request. */" />
      <item value="Connection is upgrading, but we need to ensure interceptors see a non-null response body." />
      <item value="/** * Promotes eligible calls from {@link #readyAsyncCalls} to {@link #runningAsyncCalls} and runs * them on the executor service. Must not be called with synchronization because executing calls * can call into user code." />
      <item value="/** * Bridges from application code to network code. First it builds a network request from a user * request. Then it proceeds to call the network. Finally it builds a user response from the network * response. */" />
      <item value="Attempt to enqueue this async call on {@code executorService}. This will attempt to clean up * if the executor has been shut down by reporting the call as failed." />
      <item value="* Returns &lt;tt&gt;true&lt;/tt&gt; if and only if the current thread holds the * monitor lock on the specified object. * * &lt;p&gt;This method is designed to allow a program to assert that * the current thread already holds a specified lock: * &lt;pre&gt; * assert Thread.holdsLock(obj); * &lt;/pre&gt;" />
      <item value="* Marks this thread as either a {@linkplain #isDaemon daemon} thread * or a user thread. The Java Virtual Machine exits when the only * threads running are all daemon threads." />
      <item value="Policy on when async requests are executed" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="489" />
        <entry key="ENGLISH" value="490" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="FILIPINO" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SPANISH" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1620265315320" />
  </component>
</application>