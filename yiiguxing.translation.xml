<application>
  <component name="AppStorage">
    <histories>
      <item value="/** * Have the system immediately kill all background processes associated * with the given package. This is the same as the kernel killing those * processes to reclaim memory; the system will take care of restarting * these processes in the future as needed. * * @param packageName The name of the package whose processes are to * be killed. */" />
      <item value="* Constant for {@link #importance}: This process is running something * that is actively visible to the user, though not in the immediate * foreground. This may be running a window that is behind the current * foreground (so paused and with its state saved, not interacting with * the user, but visible to them to some degree); it may also be running * other services under the system's control that it inconsiders important." />
      <item value="* Constant for {@link #importance}: This process is not something the user * is directly aware of, but is otherwise perceptible to them to some degree." />
      <item value="* Constant for {@link #importance}: {@link #IMPORTANCE_PERCEPTIBLE} had this wrong value * before {@link Build.VERSION_CODES#O}. Since the {@link Build.VERSION_CODES#O} SDK, * the value of {@link #IMPORTANCE_PERCEPTIBLE} has been fixed. * * &lt;p&gt;The system will return this value instead of {@link #IMPORTANCE_PERCEPTIBLE} * on Android versions below {@link Build.VERSION_CODES#O}. * * &lt;p&gt;On Android version {@link Build.VERSION_CODES#O} and later, this value will still be * returned for apps with the target API level below {@link Build.VERSION_CODES#O}. * For apps targeting version {@link Build.VERSION_CODES#O} and later, * the correct value {@link #IMPORTANCE_PERCEPTIBLE} will be returned." />
      <item value="* @deprecated Pre-{@link android.os.Build.VERSION_CODES#P} version of * {@link #IMPORTANCE_TOP_SLEEPING}. As of Android * {@link android.os.Build.VERSION_CODES#P}, this is considered much less * important since we want to reduce what apps can do when the screen is off." />
      <item value="* Constant for {@link #importance}: This process is contains services * that should remain running. These are background services apps have * started, not something the user is aware of, so they may be killed by * the system relatively freely (though it is generally desired that they * stay running as long as they want to)." />
      <item value="/** * @deprecated Pre-{@link android.os.Build.VERSION_CODES#P} version of * {@link #IMPORTANCE_TOP_SLEEPING}. As of Android * {@link android.os.Build.VERSION_CODES#P}, this is considered much less * important since we want to reduce what apps can do when the screen is off." />
      <item value="* Constant for {@link #importance}: This process is running a foreground * service, for example to perform music playback even while the user is * not immediately in the app. This generally indicates that the process * is doing something the user actively cares about." />
      <item value="* Constant for {@link #importance}: This process is running the * foreground UI; that is, it is the thing currently at the top of the screen * that the user is interacting with." />
      <item value="* The relative importance level that the system places on this process. * These constants are numbered so that &quot;more important&quot; values are * always smaller than &quot;less important&quot; values." />
      <item value="The relative importance level that the system places on this process. * These constants are numbered so that &quot;more important&quot; values are * always smaller than &quot;less important&quot; values. */" />
      <item value="Have the system immediately kill all background processes associated * with the given package. This is the same as the kernel killing those * processes to reclaim memory; the system will take care of restarting * these processes in the future as needed. * * @param packageName The name of the package whose processes are to * be killed." />
      <item value="* Level for {@link #onTrimMemory(int)}: the process is nearing the end * of the background LRU list, and if more memory isn't found soon it will * be killed." />
      <item value="* Level for {@link #onTrimMemory(int)}: the process has gone on to the * LRU list. This is a good opportunity to clean up resources that can * efficiently and quickly be re-built if the user returns to the app." />
      <item value="Level for {@link #onTrimMemory(int)}: the process is nearing the end * of the background LRU list, and if more memory isn't found soon it will * be killed." />
      <item value="Level for {@link #onTrimMemory(int)}: the process is around the middle * of the background LRU list; freeing memory can help the system keep * other processes running later in the list for better overall performance." />
      <item value="The following required arguments were not provided" />
      <item value="compose array with one item - current build flavor name" />
      <item value="extract Current Variants" />
      <item value="Found argument 'react-native' which wasn't expected, or isn't valid in this context" />
      <item value="Found argument 'C:\apollo-mobile-rn\android\app\build/generated/assets/react/release/diff.android.bundle' which wasn't expected, or isn't valid in this context" />
      <item value="事件" />
      <item value="成功" />
      <item value="尝试重新读取" />
      <item value="Set up the call to the compose-source-maps script" />
      <item value="Called when the react context is initialized (all modules registered). Always called on the * UI thread." />
      <item value="Add a listener to be notified of react instance events" />
      <item value="Cannot convert undefined value to object" />
      <item value="No implementation found for void libcore.icu.Transliterator.destroy" />
      <item value="load Synchronously" />
      <item value="Add a listener to be notified of react instance events." />
      <item value="Returns the high-level media type, such as &quot;text&quot;, &quot;image&quot;, &quot;audio&quot;, &quot;video&quot;, or * &quot;application&quot;." />
      <item value="load For Request" />
      <item value="save From Response" />
      <item value="Ensures all cookies currently accessible through the getCookie API are * written to persistent storage. * This call will block the caller until it is done and may perform I/O." />
      <item value="The number of method references in a .dex file cannot exceed 64K." />
      <item value="request" />
      <item value="Expected a string but was BEGIN_ARRAY at line 1 column 2 path $" />
      <item value="Expected a string but was BEGIN_OBJECT at line 1 column 2 path $" />
      <item value="accs bindapp error" />
      <item value="suitcase" />
      <item value="treasure" />
      <item value="* Mock version of the WebView. * Only non override public methods from the real WebView have been added in there. * Methods that take an unknown class as parameter or as return object, have been removed for now. * * TODO: generate automatically." />
      <item value="Calling View methods on another thread than the UI thread." />
      <item value="Indicates that the view does not have a layer." />
      <item value="容器" />
      <item value="NORMAL" />
      <item value="SINGLE COLUMN" />
      <item value="NARROW COLUMNS" />
      <item value="Default cache usage mode. If the navigation type doesn't impose any * specific behavior, use cached resources when they are available * and not expired, otherwise load resources from the network. * Use with {@link #setCacheMode}." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="327" />
        <entry key="ENGLISH" value="328" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="NORWEGIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>