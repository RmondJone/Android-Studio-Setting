<application>
  <component name="AppStorage">
    <histories>
      <item value="* Level for {@link #onTrimMemory(int)}: the process is nearing the end * of the background LRU list, and if more memory isn't found soon it will * be killed." />
      <item value="* Level for {@link #onTrimMemory(int)}: the process has gone on to the * LRU list. This is a good opportunity to clean up resources that can * efficiently and quickly be re-built if the user returns to the app." />
      <item value="Level for {@link #onTrimMemory(int)}: the process is nearing the end * of the background LRU list, and if more memory isn't found soon it will * be killed." />
      <item value="Level for {@link #onTrimMemory(int)}: the process is around the middle * of the background LRU list; freeing memory can help the system keep * other processes running later in the list for better overall performance." />
      <item value="The following required arguments were not provided" />
      <item value="compose array with one item - current build flavor name" />
      <item value="extract Current Variants" />
      <item value="Found argument 'react-native' which wasn't expected, or isn't valid in this context" />
      <item value="Found argument 'C:\apollo-mobile-rn\android\app\build/generated/assets/react/release/diff.android.bundle' which wasn't expected, or isn't valid in this context" />
      <item value="事件" />
      <item value="成功" />
      <item value="尝试重新读取" />
      <item value="Set up the call to the compose-source-maps script" />
      <item value="Called when the react context is initialized (all modules registered). Always called on the * UI thread." />
      <item value="Add a listener to be notified of react instance events" />
      <item value="Cannot convert undefined value to object" />
      <item value="No implementation found for void libcore.icu.Transliterator.destroy" />
      <item value="load Synchronously" />
      <item value="Add a listener to be notified of react instance events." />
      <item value="Returns the high-level media type, such as &quot;text&quot;, &quot;image&quot;, &quot;audio&quot;, &quot;video&quot;, or * &quot;application&quot;." />
      <item value="load For Request" />
      <item value="save From Response" />
      <item value="Ensures all cookies currently accessible through the getCookie API are * written to persistent storage. * This call will block the caller until it is done and may perform I/O." />
      <item value="The number of method references in a .dex file cannot exceed 64K." />
      <item value="request" />
      <item value="Expected a string but was BEGIN_ARRAY at line 1 column 2 path $" />
      <item value="Expected a string but was BEGIN_OBJECT at line 1 column 2 path $" />
      <item value="accs bindapp error" />
      <item value="suitcase" />
      <item value="treasure" />
      <item value="* Mock version of the WebView. * Only non override public methods from the real WebView have been added in there. * Methods that take an unknown class as parameter or as return object, have been removed for now. * * TODO: generate automatically." />
      <item value="Calling View methods on another thread than the UI thread." />
      <item value="Indicates that the view does not have a layer." />
      <item value="容器" />
      <item value="NORMAL" />
      <item value="SINGLE COLUMN" />
      <item value="NARROW COLUMNS" />
      <item value="Default cache usage mode. If the navigation type doesn't impose any * specific behavior, use cached resources when they are available * and not expired, otherwise load resources from the network. * Use with {@link #setCacheMode}." />
      <item value="Use cached resources when they are available, even if they have expired." />
      <item value="Don't use the cache, load from the network." />
      <item value="Callback on interrupt." />
      <item value="Callback after navigation." />
      <item value="Callback after lose your way." />
      <item value="Callback when find the destination." />
      <item value="Destroy this React instance and the attached JS context." />
      <item value="we currently don't have an onCreate callback so we call onResume for both transitions" />
      <item value="mDialog must exist when we call updateProperties" />
      <item value="Don't show the dialog if the host is paused" />
      <item value="* Call this from {@link Activity#onPause()}. This notifies any listening modules so they can do * any necessary cleanup. The passed Activity is the current Activity being paused. This will * always be the foreground activity that would be returned by {@link * ReactContext#getCurrentActivity()}." />
      <item value="Unmount the react application at this root view, reclaiming any JS memory associated with that * application. If {@link #startReactApplication} is called, this method must be called before the * ReactRootView is garbage collected (typically in your Activity's onDestroy, or in your * Fragment's onDestroyView)." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="311" />
        <entry key="ENGLISH" value="312" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="NORWEGIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>