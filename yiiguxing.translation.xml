<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="256" />
    <option name="newTranslationDialogWidth" value="372" />
    <option name="newTranslationDialogX" value="10533" />
    <option name="newTranslationDialogY" value="273" />
    <histories>
      <item value="dispose() implementations must always call their superclass dispose() method," />
      <item value="to ensure that all the resources used by the widget are fully released." />
      <item value="麦位" />
      <item value="Equatable" />
      <item value="Null check operator used on a null value" />
      <item value="Column's children must not contain any null values, but a null value was found at index 2" />
      <item value="{@template bloc_builder_build_when} An optional [buildWhen] can be implemented for more granular control over how often [BlocBuilder] rebuilds." />
      <item value="[buildWhen] should only be used for performance optimizations as it provides no security about the state passed to the [builder] function." />
      <item value="[buildWhen] will be invoked on each [bloc] `state` change." />
      <item value="[buildWhen] takes the previous `state` and current `state` and must return a [bool] which determines whether or not the [builder] function will be invoked." />
      <item value="[buildWhen] is optional and if omitted, it will default to `true`." />
      <item value="perform a lookup using [BlocProvider] and the current `BuildContext`." />
      <item value="Please refer to `BlocListener` if you want to &quot;do&quot; anything in response to `state` changes such as navigation, showing a dialog, etc... If the [bloc] parameter is omitted, [BlocBuilder] will automatically perform a lookup using [BlocProvider] and the current `BuildContext`." />
      <item value="Only specify the [bloc] if you wish to provide a [bloc] that is otherwise not accessible via [BlocProvider] and the current `BuildContext`." />
      <item value="The previous `state` will be initialized to the `state` of the [bloc] when the [BlocBuilder] is initialized." />
      <item value="return truefalse to determine whether or not to rebuild the widget with state" />
      <item value="mute Remote Audio" />
      <item value="on Switch Room" />
      <item value="on Dis Connect Other Room" />
      <item value="on Connect Other Room" />
      <item value="on Remote User Leave Room" />
      <item value="on Remote User Enter Room" />
      <item value="on Down Mic Click" />
      <item value="on User Audio Available" />
      <item value="主播" />
      <item value="同意" />
      <item value="入住协议" />
      <item value="压缩" />
      <item value="A RenderViewport expected a child of type RenderSliver but received a child of type RenderErrorBox." />
      <item value="A ScrollPositionWithSingleContext was used after being disposed." />
      <item value="Build scheduled during frame." />
      <item value="While the widget tree was being built, laid out, and painted, a new frame was scheduled to rebuild the widget tree." />
      <item value="空" />
      <item value="type 'Response' is not a subtype of type 'LiveRoomDetailResponse'" />
      <item value="is not a subtype of type" />
      <item value="was called without a registered event handler." />
      <item value="A dependency may only have one source." />
      <item value="BoxConstraints forces an infinite width." />
      <item value="RenderFlex children have non-zero flex but incoming width constraints are unbounded." />
      <item value="自由麦" />
      <item value="as called without a registered event handler." />
      <item value="Horizontal viewport was given unbounded height." />
      <item value="闲聊" />
      <item value="个人电台&#10;" />
      <item value="个人电台" />
      <item value="电台" />
      <item value="An InputDecorator, which is typically created by a TextField, cannot have an unbounded width. This happens when the parent widget does not provide a finite width constraint. For example, if the InputDecorator is contained by a Row, then its width must be constrained. An Expanded widget or a SizedBox can be used to constrain the width of the InputDecorator or the TextField that contains it." />
      <item value="self transparent" />
      <item value="透明" />
      <item value="封面" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1476" />
        <entry key="ENGLISH" value="1477" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="FILIPINO" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="HMONG" value="1" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="SPANISH" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1667647321051" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20220609001243264" />
      </app-key>
    </option>
    <option name="translator" value="BAIDU" />
  </component>
</application>