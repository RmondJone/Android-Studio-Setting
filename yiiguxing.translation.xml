<application>
  <component name="AppStorage">
    <histories>
      <item value="// We store JS bundle loaded from dev server in a single destination in app's data dir. // In case when someone schedule 2 subsequent reloads it may happen that JS thread will // start reading first reload output while the second reload starts writing to the same // file. As this should only be the case in dev mode we leave it as it is. // TODO(6418010): Fix readers-writers problem in debug reload from HTTP server" />
      <item value="We store JS bundle loaded from dev server in a single destination in app's data dir. // In case when someone schedule 2 subsequent reloads it may happen that JS thread will // start reading first reload output while the second reload starts writing to the same // file. As this should only be the case in dev mode we leave it as it is. // TODO(6418010): Fix readers-writers problem in debug reload from HTTP server" />
      <item value="should use downloaded * JS bundle file instead of using JS file from assets. This may happen when app has not been * updated since the last time we fetched the bundle." />
      <item value="It was renamed in D15958697 so it doesn't get stuck with no way to turn it off:" />
      <item value="This option is no longer exposed in the dev menu UI." />
      <item value="It was renamed in D15958697 so it doesn't get stuck with no way to turn it off" />
      <item value="Whether Start Sampling Profiler on App Start is enabled." />
      <item value="Whether Nuclide JS debugging is enabled." />
      <item value="Whether JS bundle should be minified." />
      <item value="Whether dev mode should be enabled in JS bundles" />
      <item value="Whether debug information about transitions should be displayed" />
      <item value="whether an overlay showing current FPS should be shown" />
      <item value="exopackage" />
      <item value="Enable the exopackage SoSource." />
      <item value="Loads Flipper in React Native templates." />
      <item value="set task dependencies for caching" />
      <item value="Create dirs if they are not there" />
      <item value="Set up inputs and outputs so gradle can cache the result" />
      <item value="// by default the gradle tasks are skipped if none of the JS files or assets change; this means * // that we don't look at files in android/ or ios/ to determine whether the tasks are up to * // date; if you have any other folders that you want to ignore for performance reasons (gradle * // indexes the entire tree), add them here. Alternatively, if you have JS files in android/ * // for example, you might want to remove it from here." />
      <item value="Expose a minimal interface on the application variant and the task itself:" />
      <item value="Set up dev mode" />
      <item value="Sets the tasks which build the files of this collection." />
      <item value="Registers some tasks which build the files of this collection." />
      <item value="Set request rationale" />
      <item value="Some privileges permanently disabled, may need to set up in the execute." />
      <item value="Handle overlay permission." />
      <item value="permissions are denied." />
      <item value="permissions are granted." />
      <item value="We use reflection here to pick up the class that initializes Flipper, since Flipper library is not available in release mode" />
      <item value="This should be set on project.ext.react and mirrored here. If it is not set * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode * and the benefits of using Hermes will therefore be sharply reduced." />
      <item value="the transform cache was reset." />
      <item value="The following packages use deprecated &quot;rnpm&quot; config that will stop working from next release" />
      <item value="react-native-reanimated could not be found within the project" />
      <item value="the transform cache was reset" />
      <item value="Compilation is not supported for following modules: react-native-screens. Unfortunately you can't have non-Gradle Java modules and Android-Gradle modules in one project." />
      <item value="Unsupported Modules Detected" />
      <item value="already disposed" />
      <item value="Already disposed" />
      <item value="Error: Option 'mapper' isn't supported by the Node crawler" />
      <item value="Option 'mapper' isn't supported by the Node crawler" />
      <item value="The following packages use deprecated &quot;rnpm&quot; config that will stop working from next release:" />
      <item value="Please notify their maintainers about it. You can find more details at https://github.com/react-native-community/cli/blob/master/docs/configuration.md#migration-guide." />
      <item value="True if this View is in edit mode, false otherwise." />
      <item value="* Returns the name of the bundle in assets. If this is null, and no file path is specified for * the bundle, the app will only work with {@code getUseDeveloperSupport} enabled and will * always try to load the JS bundle from the packager server. * e.g. &quot;index.android.bundle&quot;" />
      <item value="Returns a custom path of the bundle file. This is used in cases the bundle should be loaded * from a custom path. By default it is loaded from Android assets, from a path specified * by {@link getBundleAssetName}." />
      <item value="nuance Voice" />
      <item value="If true, also generate a universal APK" />
      <item value="代扣" />
      <item value="Please recharge" />
      <item value="Unsupported Modules Detected: Compilation is not supported for following modules: react-native-gesture-handler. Unfortunately you can't have non-Gradle Java modules and Android-Gradle modules in one project." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="88" />
        <entry key="ENGLISH" value="89" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="DUTCH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>